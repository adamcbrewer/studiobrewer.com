.wrapper {
    background-color: $c-indigo;
    width: 100%;
    margin: auto;
    display: flex;
    flex-direction: column;
    flex: 1;
}

.header {
    .page--home & {
        background-color: $c-alpha;
    }
}

.header-inner {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: stretch;
    padding-top: 56px;
    padding-bottom: 56px;
    flex: 1;

    .nav {
        display: flex;
        align-self: center;
    }
}

.logo {
    align-self: center;
    transition: 0.8s;
    position: relative;

    .inner {
        margin: auto;
        width: 130px;
        max-width: 130px;
    }

    a { display: block; }

    svg {
        fill: $c-charlie;

        rect {
            pointer-events: none;
            transition: 0.2s ease;
        }

        g {
            pointer-events: none;
        }

        .page--home & {
            fill: $c-bravo;
        }

        &:hover {
            rect {
                fill: $c-alpha;
            }

            .page--home & rect {
                fill: $c-white;
            }

        }

    }

}

.content {
    // strong {
    //     color: $c-white;
    // }
}

.footer {
    background-color: $c-alpha;
    text-align: center;
    min-height: 10px;
    color: $c-bravo;
    font-size: 1.6rem;

    &:after {
        content: "";
        height: 10px;
        display: block;
        background-size: 100% 10px;
    }

    a {
        color: $c-white;
        border-bottom-color: transparent;

        &:hover {
            border-bottom-color: currentColor;
        }
    }

}

.footer-inner {
    padding-top: 10rem;
    padding-bottom: 15rem;
}

.contain {
    margin-left: auto;
    margin-right: auto;
    width: 100%;
    max-width: calc(#{$d-siteWidth} + #{$d-gutter*2});
    padding-left: $d-gutter;
    padding-right: $d-gutter;
}

.contain--header {
    max-width: ($d-gutter*8) + ($d-column*9);
}

.contain--text {
    max-width: ($d-column * 7) + ($d-gutter * 6);
}
.contain--narrow {
    max-width: ($d-gutter*5) + ($d-column*6) + ($d-gutter*2);
}
.contain--features {
    max-width: ($d-gutter*8) + ($d-column*9);
}
.contain--projectimage {
    max-width: calc(#{$d-projectImagesWidth} + #{$d-gutter*2});
}
